{"ast":null,"code":"var _jsxFileName = \"/home/mathew/Desktop/companies/2U/rathway-React/Module1/project-portfolio/src/components/Project.js\";\nimport React from \"react\";\nimport partialMark from \"../assets/partialMarking.png\";\nimport \"../css/Project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Project(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Project\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scuoler LMS for Schools/Universities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Link:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://scuoler.com\",\n        children: \"https://scuoler.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Technologies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), \" HTML, CSS, Javascript, React, Node, Express, Rest APIs, PostgreSQL, Sockets.IO, Web RTC, Fontawsome, Material UI\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Projects Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" Scuoler is learning management system (LMS) for education environments. Being nostalgic of long years spent in academia brought the desire to develop this App (from Scratch). Existing tools such as Moodle, Blackboard, Canvas etc. are built using old technologies and has sev- eral drawbacks. We implemented game based techniques with realtime video calling, screensharing features to better engagement and collaboration of students and teachers. Feature for automatically grading student tests and quizes. Textual indexing, dynamic search feature was implemented using Generalized Inverted Index (GIN), Stemming supported in PostgreSQL. Chat feature implemented using Sockets.IO, Web RTC libraries. Frontend in Html, Css, React, Backend using Node, Express JS, Security using Json Web tokens (JWT), bcrypt, crypto-js, Morgan logging library. Database in PostgreSQL. Hired/managed couple of developers for the project.\", /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"https://www.youtube.com/embed/mv6OLu7okKI\",\n        title: \"YouTube video player\",\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"XData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Link:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.cse.iitb.ac.in/infolab/xdata/\",\n        children: \"https://www.cse.iitb.ac.in/infolab/xdata/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Technologies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \" Java, JSP, JQuery, Html, CSS, SQL, JSQL parser, Dhtml - Xchart/tree JS library, PostgreSQL, Subversion, Git - Github, Gitlab\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Projects Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" The XData project aims at building an automated SQL query grading software tool for verifying student/programmer written SQL queries against a SQL query provided by Instructor/Tester, which is assumed to be correct. Full stack development for the project in Java/JEE, HTML, CSS, PostgreSQL. Use of formal verification techniques like satisfiability module theory (SAT) techniques for SQL query verification. Also used information retrieval techniques such a Edit distance similarity to find semantic similarity of SQL queries. Reimplementing the query processing module, extending the JSQL parser to support queries having nested with clauses, natural outer joins, array overlap/containment operators. Extended query (pre)processing module by removing redundant tables in SQL queries, (outer) joins, nonrecursive With clause elimination, conversion of selection/having clause predicates to a standard form where >, < operators are converted to less than equal to, great than equal to operators by changing the values of the associated operands depending on the precision of the corresponding attributes, support the ORDER BY clauses and the distinction of subqueries that have ALL/ANY quantification.\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: partialMark,\n        alt: \"Partial Marking Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","partialMark","Project","props"],"sources":["/home/mathew/Desktop/companies/2U/rathway-React/Module1/project-portfolio/src/components/Project.js"],"sourcesContent":["import React from \"react\";\n\nimport partialMark from \"../assets/partialMarking.png\";\nimport \"../css/Project.css\";\n\nfunction Project(props) {\n  return (\n    <div className=\"Project\">\n      <section>\n        <h3>Scuoler LMS for Schools/Universities</h3>\n        <strong>Link:</strong>{\" \"}\n        <a href=\"https://scuoler.com\">https://scuoler.com</a>\n        <br />\n        <strong>Technologies:</strong> HTML, CSS, Javascript, React, Node,\n        Express, Rest APIs, PostgreSQL, Sockets.IO, Web RTC, Fontawsome,\n        Material UI\n        <br />\n        <strong>Projects Description</strong> Scuoler is learning management\n        system (LMS) for education environments. Being nostalgic of long years\n        spent in academia brought the desire to develop this App (from Scratch).\n        Existing tools such as Moodle, Blackboard, Canvas etc. are built using\n        old technologies and has sev- eral drawbacks. We implemented game based\n        techniques with realtime video calling, screensharing features to better\n        engagement and collaboration of students and teachers. Feature for\n        automatically grading student tests and quizes. Textual indexing,\n        dynamic search feature was implemented using Generalized Inverted Index\n        (GIN), Stemming supported in PostgreSQL. Chat feature implemented using\n        Sockets.IO, Web RTC libraries. Frontend in Html, Css, React, Backend\n        using Node, Express JS, Security using Json Web tokens (JWT), bcrypt,\n        crypto-js, Morgan logging library. Database in PostgreSQL. Hired/managed\n        couple of developers for the project.\n        <iframe\n          src=\"https://www.youtube.com/embed/mv6OLu7okKI\"\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        ></iframe>\n      </section>\n      <section>\n        <h3>XData</h3>\n        <strong>Link:</strong>{\" \"}\n        <a href=\"https://www.cse.iitb.ac.in/infolab/xdata/\">\n          https://www.cse.iitb.ac.in/infolab/xdata/\n        </a>\n        <br />\n        <strong>Technologies:</strong> Java, JSP, JQuery, Html, CSS, SQL, JSQL\n        parser, Dhtml - Xchart/tree JS library, PostgreSQL, Subversion, Git -\n        Github, Gitlab\n        <br />\n        <strong>Projects Description:</strong> The XData project aims at\n        building an automated SQL query grading software tool for verifying\n        student/programmer written SQL queries against a SQL query provided by\n        Instructor/Tester, which is assumed to be correct. Full stack\n        development for the project in Java/JEE, HTML, CSS, PostgreSQL. Use of\n        formal verification techniques like satisfiability module theory (SAT)\n        techniques for SQL query verification. Also used information retrieval\n        techniques such a Edit distance similarity to find semantic similarity\n        of SQL queries. Reimplementing the query processing module, extending\n        the JSQL parser to support queries having nested with clauses, natural\n        outer joins, array overlap/containment operators. Extended query\n        (pre)processing module by removing redundant tables in SQL queries,\n        (outer) joins, nonrecursive With clause elimination, conversion of\n        selection/having clause predicates to a standard form where &gt;, &lt;\n        operators are converted to less than equal to, great than equal to\n        operators by changing the values of the associated operands depending on\n        the precision of the corresponding attributes, support the ORDER BY\n        clauses and the distinction of subqueries that have ALL/ANY\n        quantification.\n        <img src={partialMark} alt=\"Partial Marking Interface\" />\n      </section>\n    </div>\n  );\n}\n\nexport default Project;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAO,oBAAP;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACtB,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,EAEyB,GAFzB,eAGE;QAAG,IAAI,EAAC,qBAAR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,oIAQE;QAAA;QAAA;QAAA;MAAA,QARF,eASE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,y6BAuBE;QACE,GAAG,EAAC,2CADN;QAEE,KAAK,EAAC,sBAFR;QAGE,WAAW,EAAC,GAHd;QAIE,KAAK,EAAC,0FAJR;QAKE,eAAe;MALjB;QAAA;QAAA;QAAA;MAAA,QAvBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAgCE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,EAEyB,GAFzB,eAGE;QAAG,IAAI,EAAC,2CAAR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAME;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,gJAUE;QAAA;QAAA;QAAA;MAAA,QAVF,eAWE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,osCA8BE;QAAK,GAAG,EAAEF,WAAV;QAAuB,GAAG,EAAC;MAA3B;QAAA;QAAA;QAAA;MAAA,QA9BF;IAAA;MAAA;MAAA;MAAA;IAAA,QAhCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmED;;KApEQC,O;AAsET,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}